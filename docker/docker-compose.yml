version: '3.8'

services:
  php:
    image: php:8.1-fpm
    container_name: demo_php
    restart: unless-stopped
    volumes:
      - ./../backend:/var/www/html   # 本地 backend 映射到容器
    networks:
      - demo-net

  nginx:
    image: nginx:1.25-alpine
    container_name: demo_nginx
    restart: unless-stopped
    ports:
      - "8080:80"                 # 本机访问 http://localhost:8080
    volumes:
      - ./../nginx/default.conf:/etc/nginx/conf.d/default.conf # 挂载自定义的 Nginx 配置
      #- ./nginx/default.conf:/etc/nginx/conf.d/default.conf  # nginx 配置
      - ./../backend/public:/var/www/html
    depends_on:
      - php
    networks:
      - demo-net

  mysql:
    image: mysql:8.0
    container_name: demo_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123  # 请第一天可用测试密码，生产环境换强密码
      MYSQL_DATABASE: demo_db
      MYSQL_USER: demo_user
      MYSQL_PASSWORD: demo_pass
    ports:
      - "23306:3306"               # 本机 13306 方便与现有项目端口保持一致
    volumes:
      - ./../mysql-data:/var/lib/mysql
    networks:
      - demo-net

  redis:
    image: redis:7
    container_name: demo_redis
    restart: unless-stopped
    ports:
      - "26379:6379"
    networks:
      - demo-net
    volumes:
      - ./../redis_data:/data

# 定义网络，让所有容器在同一个网络中，便于通过服务名互相访问
networks:
  demo-net:
    driver: bridge

# 定义数据卷，用于持久化存储数据库和 Redis 数据
volumes:
  mysql_data:
  redis_data: